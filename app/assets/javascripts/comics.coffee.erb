# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

aws_url = '<%= ENV["DIRECT_UPLOAD_S3_URL"] %>'
bucket = '<%= ENV["DIRECT_UPLOAD_S3_BUCKET"] %>'


evaporate = new Evaporate
  awsSignatureVersion: '2'
  signerUrl: '/s3/sign'
  aws_key: '<%= ENV["DIRECT_UPLOAD_AWS_ACCESS_KEY_ID"] %>'
  aws_url: aws_url
  bucket: bucket

$(document).on "turbolinks:load", ->
  toggleSave = ->
    if $("#comic_title").val().length > 0 && $("#pages .page").length > 0
      $("#save-comics-button").removeClass("disabled")
    else
      $("#save-comics-button").addClass("disabled")
  $("#comic_title").keyup(toggleSave)

  setupPage = (page) ->
    page.click ->
      page.toggleClass("selected")
      if $("#pages .page.selected").length > 0
        $("#delete-images-button").addClass("show")
        $("#more-images").removeClass("show")
      else
        $("#delete-images-button").removeClass("show")
        $("#more-images").addClass("show")

  setupPage($(page)) for page in $("#pages .page").toArray()
  $("#delete-images-button").click ->
    $("#pages .page.selected").parent(".col").remove();
    if ("#pages .page.selected").length == 0
      $("#more-images").addClass("initial")
    setPagesOrder()
    toggleSave()
    $("#delete-images-button").removeClass("show")
    $("#more-images").addClass("show")

  setPagesOrder = ->
    $("#comic_pages_order").val(
      JSON.stringify(($(child).data("id") for child in $("#pages .page").toArray()))
    )

  $('.sortable-cards').each (_i, sortableCardsEl) ->
    sortableCards = $(sortableCardsEl)

    sortable = new Sortable(sortableCardsEl, {
      forceFallback: true,
      animation: 150,
      onUpdate: setPagesOrder
    });

  moreImagesButton = $("#more-images")

  handleAddImage = (id) ->
    $.get "/pages/#{id}", (page) ->
      $("#pages")
        .append(
          $("<div>").addClass("col s12 m6 l4")
            .append(page)
            .append(
              $("<input>").prop({ type: "hidden", name: "comic[page_ids][]" }).val(id)
            )
          )
      setupPage($(".page[data-id=#{id}]"))
      setPagesOrder()
      toggleSave()
      $("#more-images").removeClass("initial")

    , "html"

  handleUpload = (file) ->
    evaporate.add
      name: "#{moreImagesButton.data('owner')}/#{Math.floor(Date.now())}-#{file.name}"
      file: file
      started: ->
        Materialize.toast("Uploading #{file.name}", 3000)

      complete: (_xhr, path) ->
        fileUrl = aws_url + '/' + bucket + '/' + path
        $.ajax
          method: 'post'
          url: moreImagesButton.data("path")
          dataType: "json"
          data:
            page:
              s3_file_url: fileUrl
          success: (response) -> handleAddImage(response.id)

  handleMultipleUpload = (files) ->
    return if files.length == 0
    handleUpload(files[0]).then ->
      handleMultipleUpload(files.slice(1, files.length))

  moreImagesButton.click (event) ->
    event.preventDefault()
    $("form").find("[type=file]").click()

  $("form").find("[type=file]").change (event) -> handleMultipleUpload(file for file in event.target.files)

  $("#save-comics-button").click (e) ->
    e.preventDefault();
    $(".new_comic,.edit_comic").submit()

$(document).on "turbolinks:load", ->
  $(".gallery-body .carousel .carousel-item").click ->
    carousel = $(".full-screen-carousel[data-comic-id=#{$(this).data("comic-id")}]")
    carousel.addClass("active")
    carousel.find(".carousel").carousel
      dist: 0
      noWrap: true
    carousel.find(".carousel").carousel("set", $(this).data("page-index"))
    carousel.find(".carousel-item").click (e) ->
      e.preventDefault();
      carousel.removeClass("active")
